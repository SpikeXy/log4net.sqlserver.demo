<?xml version="1.0" encoding="utf-8"?>
<log4net>
	<!--文件记录 begin######################################################################################################################################## -->
	<!-- 将日志以回滚文件的形式写到文件中 -->
	<!-- 按日期切分日志文件，并将日期作为日志文件的名字 -->
	<!--Error-->
	<appender name="ErrorLog" type="log4net.Appender.RollingFileAppender">
		<!--不加utf-8编码格式，中文字符将显示成乱码-->
		<param name="Encoding" value="utf-8" />
    <file value="D:\Log4Net\150202\" />
		<appendToFile value="true" />
		<rollingStyle value="Date" />
		<!--日期的格式，每天换一个文件记录，如不设置则永远只记录一天的日志，需设置-->
		<datePattern value="&quot;GlobalExceptionLogs_&quot;yyyyMMdd&quot;.log&quot;" />
		<!--日志文件名是否为静态-->
		<StaticLogFileName value="false"/>
		<!--多线程时采用最小锁定-->
		<lockingModel type="log4net.Appender.FileAppender+MinimalLock" />
		<!--布局（向用户显示最后经过格式化的输出信息）-->
		<layout type="log4net.Layout.PatternLayout">
			<conversionPattern value="%date| %-5level %newline%message%newline--------------------------------%newline" />
		</layout>
		<filter type="log4net.Filter.LevelRangeFilter">
			<levelMin value="ERROR" />
			<levelMax value="FATAL" />
		</filter>
	</appender>
	<!--Error-->
	<!--Info-->
	<appender name="InfoLog" type="log4net.Appender.RollingFileAppender">
		<!--不加utf-8编码格式，中文字符将显示成乱码-->
		<param name="Encoding" value="utf-8" />
		<!--定义文件存放位置-->
    <file value="D:\Log4Net\150202\" />
		<appendToFile value="true" />
		<rollingStyle value="Date" />
		<!--日志文件名是否为静态-->
		<StaticLogFileName value="false"/>
		<!--日期的格式，每天换一个文件记录，如不设置则永远只记录一天的日志，需设置-->
		<datePattern value="&quot;GlobalInfoLogs_&quot;yyyyMMdd&quot;.log&quot;" />
		<!--多线程时采用最小锁定-->
		<lockingModel type="log4net.Appender.FileAppender+MinimalLock" />
		<!--布局（向用户显示最后经过格式化的输出信息）-->
		<layout type="log4net.Layout.PatternLayout">
			<conversionPattern value="%date| %-5level%c %newline%message%newline--------------------------------%newline" />
		</layout>
		<filter type="log4net.Filter.LevelRangeFilter">
			<levelMin value="DEBUG" />
			<levelMax value="WARN" />
		</filter>
	</appender>
	<!--Info-->
	<!--文件记录 end######################################################################################################################################## -->


	<!--MSSQL记录 begin######################################################################################################################################## -->
	<!--访问结果错误记录-->
	<appender name="AdoNetAppenderError" type="MicroKnights.Logging.AdoNetAppender, MicroKnights.Log4NetAdoNetAppender">
		<bufferSize value="1" />
		<connectionType value="Microsoft.Data.SqlClient.SqlConnection, Microsoft.Data.SqlClient,Version=4.0.0.0,Culture=neutral,PublicKeyToken=23ec7fc2d6eaa4a5" />   
    <connectionStringName value="sqlserver" />
    <!--这种connectionstrings.json方式不生效-->
    <!--<connectionStringFile value="connectionstrings.json" />-->
    <!--这种直接配置connenctionstring是可行的-->
		<connectionString value="Data Source=.;Initial Catalog=test;Trusted_Connection=True;Encrypt=false;TrustServerCertificate=false;" />
		<commandText value="INSERT INTO GblLogError ([Date],[Thread],[Level],[Logger],[Message],[Exception]) VALUES (@log_date, @thread, @log_level, @logger, @message, @exception)" />
		<parameter>
			<parameterName value="@log_date" />
			<dbType value="DateTime" />
			<layout type="log4net.Layout.RawTimeStampLayout" />
		</parameter>
		<parameter>
			<parameterName value="@thread" />
			<dbType value="String" />
			<size value="255" />
			<layout type="log4net.Layout.PatternLayout">
				<conversionPattern value="%thread" />
			</layout>
		</parameter>
		<parameter>
			<parameterName value="@log_level" />
			<dbType value="String" />
			<size value="50" />
			<layout type="log4net.Layout.PatternLayout">
				<conversionPattern value="%level" />
			</layout>
		</parameter>
		<parameter>
			<parameterName value="@logger" />
			<dbType value="String" />
			<size value="255" />
			<layout type="log4net.Layout.PatternLayout">
				<conversionPattern value="%logger" />
			</layout>
		</parameter>
		<parameter>
			<parameterName value="@number" />
			<dbType value="String" />
			<size value="20" />
			<layout type="log4net.Layout.PatternLayout">
				<conversionPattern value="%property{number}" />
			</layout>
		</parameter>
		<parameter>
			<parameterName value="@message" />
			<dbType value="String" />
			<size value="4000" />
			<layout type="log4net.Layout.PatternLayout">
				<conversionPattern value="%message" />
			</layout>
		</parameter>
		<parameter>
			<parameterName value="@exception" />
			<dbType value="String" />
			<size value="4000" />
			<layout type="log4net.Layout.ExceptionLayout" />
		</parameter>
		<filter type="log4net.Filter.LevelRangeFilter">
			<levelMin value="ERROR" />
			<levelMax value="FATAL" />
		</filter>
	</appender>
	<!--访问结果记录,Sql记录-->
	<appender name="AdoNetAppenderDebug" type="MicroKnights.Logging.AdoNetAppender, MicroKnights.Log4NetAdoNetAppender">
		<bufferSize value="1" />
<connectionType value="Microsoft.Data.SqlClient.SqlConnection, Microsoft.Data.SqlClient,Version=4.0.0.0,Culture=neutral,PublicKeyToken=23ec7fc2d6eaa4a5" />   
    <connectionStringName value="sqlserver" />
    <!--这种connectionstrings.json方式不生效-->
    <!--<connectionStringFile value="connectionstrings.json" />-->
    <!--这种直接配置connenctionstring是可行的-->
		<connectionString value="Data Source=.;Initial Catalog=test;Trusted_Connection=True;Encrypt=false;TrustServerCertificate=false;" />
		<commandText value="INSERT INTO GblLogDebug ([Date],[Thread],[Level],[Logger],[Message],[Exception]) VALUES (@log_date, @thread, @log_level, @logger, @message, @exception)" />
		<parameter>
			<parameterName value="@log_date" />
			<dbType value="DateTime" />
			<layout type="log4net.Layout.RawTimeStampLayout" />
		</parameter>
		<parameter>
			<parameterName value="@thread" />
			<dbType value="String" />
			<size value="255" />
			<layout type="log4net.Layout.PatternLayout">
				<conversionPattern value="%thread" />
			</layout>
		</parameter>
		<parameter>
			<parameterName value="@log_level" />
			<dbType value="String" />
			<size value="50" />
			<layout type="log4net.Layout.PatternLayout">
				<conversionPattern value="%level" />
			</layout>
		</parameter>
		<parameter>
			<parameterName value="@logger" />
			<dbType value="String" />
			<size value="255" />
			<layout type="log4net.Layout.PatternLayout">
				<conversionPattern value="%logger" />
			</layout>
		</parameter>
		<parameter>
			<parameterName value="@number" />
			<dbType value="String" />
			<size value="20" />
			<layout type="log4net.Layout.PatternLayout">
				<conversionPattern value="%property{number}" />
			</layout>
		</parameter>
		<parameter>
			<parameterName value="@message" />
			<dbType value="String" />
			<size value="4000" />
			<layout type="log4net.Layout.PatternLayout">
				<conversionPattern value="%message" />
			</layout>
		</parameter>
		<parameter>
			<parameterName value="@exception" />
			<dbType value="String" />
			<size value="4000" />
			<layout type="log4net.Layout.ExceptionLayout" />
		</parameter>
		<filter type="log4net.Filter.LevelRangeFilter">
			<levelMin value="DEBUG" />
			<levelMax value="DEBUG" />
		</filter>
	</appender>
	<!--IP访问记录,请求资源记录-->
	<appender name="AdoNetAppenderInfo" type="MicroKnights.Logging.AdoNetAppender, MicroKnights.Log4NetAdoNetAppender">
		<bufferSize value="1" />
<connectionType value="Microsoft.Data.SqlClient.SqlConnection, Microsoft.Data.SqlClient,Version=4.0.0.0,Culture=neutral,PublicKeyToken=23ec7fc2d6eaa4a5" />   
    <connectionStringName value="sqlserver" />
    <!--这种connectionstrings.json方式不生效-->
		<!--<connectionStringFile value="connectionstrings.json" />-->
    <!--这种直接配置connenctionstring是可行的-->
		<connectionString value="Data Source=.;Initial Catalog=test;Trusted_Connection=True;Encrypt=false;TrustServerCertificate=false;" />
		<commandText value="INSERT INTO GblLogInfo ([Date],[Thread],[Level],[Logger],[Message],[Exception]) VALUES (@log_date, @thread, @log_level, @logger, @message, @exception)" />
		<parameter>
			<parameterName value="@log_date" />
			<dbType value="DateTime" />
			<layout type="log4net.Layout.RawTimeStampLayout" />
		</parameter>
		<parameter>
			<parameterName value="@thread" />
			<dbType value="String" />
			<size value="255" />
			<layout type="log4net.Layout.PatternLayout">
				<conversionPattern value="%thread" />
			</layout>
		</parameter>
		<parameter>
			<parameterName value="@log_level" />
			<dbType value="String" />
			<size value="50" />
			<layout type="log4net.Layout.PatternLayout">
				<conversionPattern value="%level" />
			</layout>
		</parameter>
		<parameter>
			<parameterName value="@logger" />
			<dbType value="String" />
			<size value="255" />
			<layout type="log4net.Layout.PatternLayout">
				<conversionPattern value="%logger" />
			</layout>
		</parameter>
		<parameter>
			<parameterName value="@number" />
			<dbType value="String" />
			<size value="20" />
			<layout type="log4net.Layout.PatternLayout">
				<conversionPattern value="%property{number}" />
			</layout>
		</parameter>
		<parameter>
			<parameterName value="@message" />
			<dbType value="String" />
			<size value="4000" />
			<layout type="log4net.Layout.PatternLayout">
				<conversionPattern value="%message" />
			</layout>
		</parameter>
		<parameter>
			<parameterName value="@exception" />
			<dbType value="String" />
			<size value="4000" />
			<layout type="log4net.Layout.ExceptionLayout" />
		</parameter>
		<filter type="log4net.Filter.LevelRangeFilter">
			<levelMin value="INFO" />
			<levelMax value="INFO" />
		</filter>
	</appender>
	<!--MSSQL记录 end######################################################################################################################################## -->

	<!--启用记录器-->
	<root>
		<!-- 控制级别，由低到高：ALL|DEBUG|INFO|WARN|ERROR|FATAL|OFF -->
		<!-- 比如定义级别为INFO，则INFO级别向下的级别，比如DEBUG日志将不会被记录 -->
		<!-- 如果没有定义LEVEL的值，则缺省为DEBUG -->
		<level value="ALL" />


		<!-- 按日期切分日志文件，并将日期作为日志文件的名字 -->
		<!--文件日志、暂不使用-->
		<!--<appender-ref ref="ErrorLog" />
		<appender-ref ref="InfoLog" />-->

		<!--MongoDB日志、暂不使用-->
		<!--<appender-ref ref="MongoDBAppenderinfo" />
		<appender-ref ref="MongoDBAppenderdebug" />
		<appender-ref ref="MongoDBAppendererror" />-->

		<!--MSSQL日志-->
		<appender-ref ref="AdoNetAppenderError" />
		<appender-ref ref="AdoNetAppenderDebug" />
		<appender-ref ref="AdoNetAppenderInfo" />
	</root>
	<!--启用记录器-->
</log4net>